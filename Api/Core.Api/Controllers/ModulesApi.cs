/*
 * ITESM-LVCD
 *
 * Documentación de api del TMS de Transportes Cuauhtémoc
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using TmsTcAPI.DAL.Models;
using IO.Swagger.Business;
using IO.Swagger.Models;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ModulesApiController : ControllerBase
    {
        private readonly TmsTcEntities context;

        public ModulesApiController(TmsTcEntities context)
        {
            this.context = context;
        }

        /// <summary>
        /// Obtiene los modulos
        /// </summary>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/modules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetModules")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Module>), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult GetModules()
        {
            return new ModulesBusiness(context, User).GetModules();
        }

        /// <summary>
        /// Obtiene las funcionalidades de un modulo
        /// </summary>
        /// <param name="id">El id del modulo al que pertenece la funcionalidad</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/modules/{id}/functionalities")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetFunctionalities")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Functionality>), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult GetFunctionalities([FromRoute][Required]int? id)
        {
            return new ModulesBusiness(context, User).GetFunctionalities(id.Value);
        }
    }
}
