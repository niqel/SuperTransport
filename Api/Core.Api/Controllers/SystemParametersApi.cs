/*
 * ITESM-LVCD
 *
 * Documentación de api del TMS de Transportes Cuauhtémoc
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using CrmTcAPI.Models;
using TmsTcAPI.DAL.Models;
using IO.Swagger.Business;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SystemParametersApiController : ControllerBase
    {
        private readonly TmsTcEntities context;

        public SystemParametersApiController(TmsTcEntities context)
        {
            this.context = context;
        }

        /// <summary>
        /// Obtiene los parametros del sistema
        /// </summary>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/system-parameters")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetSystemParameters")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ParametroSistemaCustom>), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult GetSystemParameters()
        {
            return new SystemParametersBusiness(context, User).GetSystemParameters();
        }

        /// <summary>
        /// Obtiene el historial de un parametro del sistema
        /// </summary>
        /// <param name="modulo">El modulo del parametro del sistema</param>
        /// <param name="nombre">El nombre del parametro del sistema</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/system-parameters/history")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetSystemParameterHistory")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<HistoryRecord>), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult GetSystemParameterHistory([FromQuery][Required]string modulo, [FromQuery][Required]string nombre)
        {
            return new SystemParametersBusiness(context, User).GetSystemParameterHistory(modulo, nombre);
        }

        /// <summary>
        /// Actualiza un parametro del sistema
        /// </summary>
        /// <param name="body">El parametro del sistema modificado</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpPut]
        [Route("/system-parameters")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("UpdateSystemParameter")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProblemDetails), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult UpdateSystemParameter([FromBody][Required]ParametroSistemaCustom body)
        {
            return new SystemParametersBusiness(context, User).UpdateSystemParameter(body);
        }
    }
}
