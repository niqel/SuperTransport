/*
 * Transportes Cuauhtémoc
 *
 * Transportes Cuauhtémoc (ASP.NET Core 3.1)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;
using CrmTc.DAL.Models;
using InnovaLinks.DAL.Models;
using ListdbTc.DAL.Models;
using AuthenticationHandler.Controllers;
using TmsTcAPI.DAL.Models;
using Viajes.Api.Business;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ClarificationApiController : TmsControllerBase
    {
        protected CrmTcEntities CrmContext { get; private set; }
        protected InnovaLinksEntities InnovaLinksContext { get; private set; }
        protected ListdbTcEntities ListdbTcContext { get; private set; }

        public ClarificationApiController(TmsTcEntities context, InnovaLinksEntities innovaLinksContext, ListdbTcEntities listdbTcContext, CrmTcEntities crmContext) : base(context)
        {
            CrmContext = crmContext;
            InnovaLinksContext = innovaLinksContext;
            ListdbTcContext = listdbTcContext;
        }

        /// <summary>
        /// Crear aclaración
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpPost]
        [Route("/clarification")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("CreateClarification")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProblemDetails), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult CreateClarification([FromBody]Clarification body)
        {
            return new ClarificationBusiness(Context, CrmContext, InnovaLinksContext, ListdbTcContext, User).CreateClarification(body);
        }

        /// <summary>
        /// Consulta de aclaraciones
        /// </summary>
        /// <param name="idClarification"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/clarification")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetClarification")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Clarification>), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult GetClarification([FromQuery]int? idClarification)
        {
            return new ClarificationBusiness(Context, CrmContext, InnovaLinksContext, ListdbTcContext, User).GetClarification(idClarification);
        }

        /// <summary>
        /// Obtener catálogo de estatus de aclaración
        /// </summary>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/clarification/status")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetClarificationStatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ClarificationStatus>), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult GetClarificationStatus()
        {
            return new ClarificationBusiness(Context, CrmContext, InnovaLinksContext, ListdbTcContext, User).GetClarificationStatus();
        }

        /// <summary>
        /// Actualizar aclaración
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpPatch]
        [Route("/clarification")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("UpdateClarification")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProblemDetails), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult UpdateClarification([FromBody]Clarification body)
        {
            return new ClarificationBusiness(Context, CrmContext, InnovaLinksContext, ListdbTcContext, User).UpdateClarification(body);
        }
    }
}
