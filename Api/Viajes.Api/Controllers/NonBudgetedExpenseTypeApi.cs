/*
 * Transportes Cuauhtémoc
 *
 * Transportes Cuauhtémoc (ASP.NET Core 3.1)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@tc.com.mx
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;
using Viajes.Api.Business;
using TmsTcAPI.DAL.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class NonBudgetedExpenseTypeApiController : ControllerBase
    {

        protected TmsTcAPI.DAL.Models.TmsTcEntities TmsContext { get; private set; }
        protected NonBudgetedExpenseTypeBusiness NonBudgetedExpenseTypeBusiness { get; set; }

        public NonBudgetedExpenseTypeApiController(TmsTcEntities context)
        {
            this.TmsContext = context;
            this.NonBudgetedExpenseTypeBusiness = new NonBudgetedExpenseTypeBusiness(TmsContext, User);
        }
        /// <summary>
        /// Obtiene el catálogo de los tipos de gastos no presupuestados
        /// </summary>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/api/viajes/NonBudgetedExpenseType")]
        [ValidateModelState]
        [SwaggerOperation("GetAllNonBudgetedExpenseType")]
        [SwaggerResponse(statusCode: 200, type: typeof(RNonBudgetedExpenseType), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 401, type: typeof(ProblemDetails), description: "Unauthorized")]
        public virtual IActionResult GetAllNonBudgetedExpenseType()
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RNonBudgetedExpenseType));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ProblemDetails));
           
            return new ObjectResult(this.NonBudgetedExpenseTypeBusiness.GetAllNonBudgetedExpenseType());
        }
    }
}
