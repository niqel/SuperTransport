<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Viajes.Api</name>
    </assembly>
    <members>
        <member name="T:IO.Swagger.Attributes.FileResultContentTypeAttribute">
            <summary>
            Indicates swashbuckle should expose the result of the method as a file in open api (see https://swagger.io/docs/specification/describing-responses/)
            </summary>
        </member>
        <member name="P:IO.Swagger.Attributes.FileResultContentTypeAttribute.ContentType">
            <summary>
            Content type of the file e.g. image/png
            </summary>
        </member>
        <member name="T:IO.Swagger.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:IO.Swagger.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.Inicializa">
            <summary>
            inicializa todos los objetos necesarios.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.InicializaPlanDeViajes">
            <summary>
            inicializa el resultado del algoritmo, debe correrse despues de cargar las oficinas
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneParametrosDeConfiguracion">
            <summary>
            i.e.: BR para el límite para cambiar un regreso.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneForecasts">
            <summary>
            [D]: datos de la necesidad de carga por día que ya se tienen planeados en las oficinas.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtienePlanActualDeCarga">
            <summary>
            [D]: datos de la necesidad de carga por día que ya se tienen planeados en las oficinas.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneRegresos">
            <summary>
            Obtiene todos los regresos posibles para las rutas
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneMovimientosInterOficina">
            <summary>
            [br]: solo los autorizados, y que no hayan sido ya incluidos en el plan (nota: cuando un movimiento interoficina ya se agregue al plan, ponerlo en estatus terminado)
            [D]: tractor, operador, día de salida, origen, destino.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneViajesActuales">
            <summary>
            [D]: id, status[iniciado, cancelado, aDestino, deRegreso, finalizado, cerrado], tractor, operador, día de salida, origen, destino, regreso calculado, ubicación actual.
            kilometrajeOrigenDestino, kilometrajeDestinoRegreso, kilometrajeActual
            Modelar la máquina de estados de viaje.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneOperadores">
            <summary>
            [br]: todos los activos (disponibles, de vacaciones, inhabilitado temporalmente).
            [D]: id, nombre, tractor id, calificacionDelMes, disponibilidad.
            [ToDo]: se debe modelar bien la máquina de estados.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneTractores">
            <summary>
            [br]: solo los que están dentro de la flota activa (esto incluye los que están en taller)
            [D]: tractor id, nombre, kilometraje actual, geoposición, tipo de madrina.
            [todo]: se dene modelar la máquina de estados.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneOficinas">
            <summary>
            [D]: ubicación, capacidad máxima carga.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneDatosTalleres">
            <summary>
            [D]: ubicación.
            </summary>
        </member>
        <member name="M:IO.Swagger.Business.TravelPlansBusiness.ObtieneOrdenesMantenimiento">
            <summary>
            [D]: ubicación.
            </summary>
        </member>
        <member name="T:IO.Swagger.Controllers.BonusApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.BonusApiController.CreateBonus">
            <summary>
            Calcular bono
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.BonusApiController.GetBonus(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Obtener las rúbricas y puntuación del bono por viaje de un operador
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.BonusApiController.UpdateBonus(IO.Swagger.Models.Bonus)">
            <summary>
            Actualizar bono
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.ClarificationApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.ClarificationApiController.CreateClarification(IO.Swagger.Models.Clarification)">
            <summary>
            Crear aclaración
            </summary>
            <param name="body"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.ClarificationApiController.GetClarification(System.Nullable{System.Int32})">
            <summary>
            Consulta de aclaraciones
            </summary>
            <param name="idClarification"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.ClarificationApiController.GetClarificationStatus">
            <summary>
            Obtener catálogo de estatus de aclaración
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.ClarificationApiController.UpdateClarification(IO.Swagger.Models.Clarification)">
            <summary>
            Actualizar aclaración
            </summary>
            <param name="body"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.EvidenceNonBudgetedExpenseApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.EvidenceNonBudgetedExpenseApiController.EvidenceNonBudgetedExpense(IO.Swagger.Models.EvidenceNonBudgetedExpense)">
            <summary>
            Crear evidencia de un gasto
            </summary>
            <param name="body"></param>
            <response code="201">201Created</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.EvidenceNonBudgetedExpenseApiController.GetEvidencesByIdBudgetedExpense(System.Nullable{System.Int32})">
            <summary>
            Obtener ls evidencias de los gastos no presupuestados
            </summary>
            <param name="idNonBudgetedExpense">id del gasto no presupuestado</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.ForecastsApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.ForecastsApiController.GetForecasts(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean})">
            <summary>
            Obtiene los forecast
            </summary>
            <param name="startDate">La primera fecha a consultar</param>
            <param name="endDate">La última fecha a consultar</param>
            <param name="edited">Filtrar elementos que han sido editados desde la interfaz gráfica</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.ForecastsApiController.UpdateForecasts(System.Collections.Generic.List{IO.Swagger.Models.Forecast},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Actualiza los forecasts
            </summary>
            <param name="body"></param>
            <param name="startDate">La primera fecha a incluir en el forecast</param>
            <param name="endDate">La última fecha a incluir en el forecast</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.ForecastsApiController.UploadForecasts(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Sube un archivo de forecasts
            </summary>
            <param name="file">El archivo a subir</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.HotelApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.HotelApiController.ApiViajesHotelGet">
            <summary>
            Consulta los hoteles
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.HotelApiController.ApiViajesHotelPost(IO.Swagger.Models.Hotel)">
            <summary>
            Añade un hotel
            </summary>
            <param name="body">Añade un hotel</param>
            <response code="201">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.HotelApiController.GetHotelByRouteId(System.Nullable{System.Int32})">
            <summary>
            Consulta los hoteles por ruta
            </summary>
            <param name="routeId">Es el id de la ruta</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.InternalTransfersApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.InternalTransfersApiController.AddInternalTransfer(IO.Swagger.Models.InternalTransfer)">
            <summary>
            Añade una transferencia interoficina
            </summary>
            <param name="body"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.InternalTransfersApiController.GetInternalTransfers">
            <summary>
            Obtiene las transferencias interoficina
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.InternalTransfersApiController.UpdateInternalTransfer(IO.Swagger.Models.InternalTransfer,System.Nullable{System.Int32})">
            <summary>
            Actualiza una transferencia interoficina
            </summary>
            <param name="body"></param>
            <param name="id">El id de la transferencia interoficina</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
            <response code="404">Not Found</response>
        </member>
        <member name="M:IO.Swagger.Controllers.InternalTransfersApiController.GetInternalTransfersApprovalStatus">
            <summary>
            Obtiene los status de aprobación de las transferencias interoficina
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.LoadPlansApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.LoadPlansApiController.GetLoadPlans(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Obtiene el plan de carga
            </summary>
            <param name="year">El año del plan de carga</param>
            <param name="month">El mes del plan de carga</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.LoadPlansApiController.UpdateLoadPlans(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Actualiza el plan de carga
            </summary>
            <param name="body"></param>
            <param name="year">El año del plan de carga</param>
            <param name="month">El mes del plan de carga</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.LoadPlansApiController.UpdateLoadPlanOfPreviousDay">
            <summary>
            Actualiza LoadPlan al dia anterior
            </summary>
            <response code="204">El recurso sido cargado.</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.LocationsApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.LocationsApiController.GetLocations(IO.Swagger.Models.LocationType)">
            <summary>
            Obtiene las ubicaciones
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.NonBudgetedExpenseApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.GetAllByDateNonBudgetedExpense(System.Nullable{System.DateTime})">
            <summary>
            Consulta de gastos no presupuestados por fecha
            </summary>
            <param name="date">La fecha del gasto no presupestado</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.GetAllByIdStatusNonBudgetedExpense(System.Nullable{System.Int32})">
            <summary>
            Consulta de gastos no presupuestados por idStatus
            </summary>
            <param name="idStatus">id del status</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.GetAllByTripNonBudgetedExpense(System.Nullable{System.Int32})">
            <summary>
            Consulta de gastos no presupuestados por idViaje
            </summary>
            <param name="idTrip">Es el id del viaje</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.GetAllNonBudgetedExpense">
            <summary>
            Consulta de gastos no presupuestados 
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.GetByIdNonBudgetedExpense(System.Nullable{System.Int32})">
            <summary>
            Consulta de gastos no presupuestados por id
            </summary>
            <param name="id">Es el id del gasto no presupuestado</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.GetByIdOperatorIdTripNonBudgetedExpense(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Consulta de gastos no presupuestados por operador y viaje
            </summary>
            <param name="idOperator">Es el id del Operador</param>
            <param name="idTrip">Es el id del viaje</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.NonBudgetedExpensePost(IO.Swagger.Models.NonBudgetedExpense)">
            <summary>
            Añade un gasto no presupuestado
            </summary>
            <param name="body">Añade un gasto no presupuestado</param>
            <response code="201">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.UpdateExternalNonBudgetedExpense(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Obtiene la informacion por medio de un Store Procedure y actualiza.
            </summary>
            <param name="idOperator">Es el id del Operador</param>
            <param name="idTrip">Es el id del viaje</param>
            <response code="204">El recurso sido cargado.</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseApiController.UpdateNonBudgetedExpense(IO.Swagger.Models.NonBudgetedExpense,System.Nullable{System.Int32})">
            <summary>
            Actualiza un gasto no presupuestado
            </summary>
            <param name="body"></param>
            <param name="id">Es el id del Operador</param>
            <response code="204">Se actualiza el recurso</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.NonBudgetedExpenseTypeApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.NonBudgetedExpenseTypeApiController.GetAllNonBudgetedExpenseType">
            <summary>
            Obtiene el catálogo de los tipos de gastos no presupuestados
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.NotificationApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.NotificationApiController.CreateNotification(IO.Swagger.Models.Notification)">
            <summary>
            Generar notificación
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NotificationApiController.GetNotification(IO.Swagger.Models.Notification)">
            <summary>
            Obtener notificaciones
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NotificationApiController.GetNotificationStatus">
            <summary>
            Obtener catálogo de estatus de notificación
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NotificationApiController.SendNotification">
            <summary>
            Enviar notificación
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NotificationApiController.SendNotificationEmail">
            <summary>
            Enviar correo de notificación
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NotificationApiController.SendNotificationIdOperator(System.Nullable{System.Int32},IO.Swagger.Models.Notification)">
            <summary>
            Enviar notificación
            </summary>
            <param name="idOperator">El id del operador</param>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.NotificationApiController.UpdateNotification(IO.Swagger.Models.LocationType)">
            <summary>
            Actualizar notificación
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.PaymentApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.PaymentApiController.CreatePayment">
            <summary>
            Generar liquidaciones
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.PaymentApiController.GetPayment(System.Nullable{System.Int32})">
            <summary>
            Obtiene las liquidaciones
            </summary>
            <param name="idOperator"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.PaymentApiController.GetPaymentDetails(System.Nullable{System.Int32})">
            <summary>
            Obtener detalle de liquidación
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.PaymentApiController.GetPaymentEstatus">
            <summary>
            Obtener catálogo de estatus de liquidación
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.PaymentApiController.UpdatePayment">
            <summary>
            Actualizar liquidación
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.SalaryApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.SalaryApiController.GetSalary">
            <summary>
            Obtiene el sueldo. Implica algoritmo de cálculo y informacion de fortia obtener de fortia.
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.SettlementApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.SettlementApiController.CreateSettlements(System.Nullable{System.Int32})">
            <summary>
            Crea las nuevas liquidaciones
            </summary>
            <param name="numberTrips">Son los numeros de viajes para generar la liquidacion</param>
            <response code="204">El recurso sido cargado.</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.TicketApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.TicketApiController.CreateTicket(IO.Swagger.Models.Ticket)">
            <summary>
            Dar de alta un nuevo ticket
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TicketApiController.GetDepartments">
            <summary>
            Obtener catálogo de departamentos
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TicketApiController.GetTicket">
            <summary>
            Consulta de tickets
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TicketApiController.GetTicketStatus">
            <summary>
            Obtener catálogo de estatus de ticket
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TicketApiController.GetTicketTypes">
            <summary>
            Obtener catálogo de tipos de ticket
            </summary>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TicketApiController.UpdateTicket(IO.Swagger.Models.Ticket)">
            <summary>
            Actualizar un ticket
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.TrafficPlansApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.TrafficPlansApiController.AddTrafficPlan(IO.Swagger.Models.TrafficPlan)">
            <summary>
            Añade un plan de tráfico
            </summary>
            <param name="body"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TrafficPlansApiController.DeleteTrafficPlan(System.Nullable{System.Int32})">
            <summary>
            Elimina un plan de tráfico
            </summary>
            <param name="id">El id del plan de tráfico</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
            <response code="404">Not Found</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TrafficPlansApiController.GetTrafficPlans">
            <summary>
            Obtiene los planes de tráfico
            </summary>
            <response code="200">OK</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TrafficPlansApiController.UpdateTrafficPlan(IO.Swagger.Models.TrafficPlan,System.Nullable{System.Int32})">
            <summary>
            Actualiza un plan de tráfico
            </summary>
            <param name="body"></param>
            <param name="id">El id del plan de tráfico</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
            <response code="404">Not Found</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TrafficPlansApiController.UploadTrafficPlans(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Sube un archivo de plan de tráfico
            </summary>
            <param name="file">El archivo a subir</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TrafficPlansApiController.UpdateStatusOperationTraffic">
            <summary>
            Obtiene la informacion de zam por medio de un StoreProcedure.
            </summary>
            <response code="204">El recurso sido cargado.</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.TravelApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.TravelApiController.GetTravelsCompleted(System.Nullable{System.Int32})">
            <summary>
            Consulta de viajes completados del operador
            </summary>
            <param name="type"></param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TravelApiController.GetTravelsCurrent(System.Nullable{System.Int32})">
            <summary>
            Consulta viaje actual o ultimo del operador
            </summary>
            <param name="idOperator">Id del operador</param>
            <response code="200">Success</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
            <response code="404">Not Found</response>
        </member>
        <member name="T:IO.Swagger.Controllers.TravelPlansApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.TravelPlansApiController.PostTravelPlans(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Ejecuta el plan de viaje para el periodo especificado de manera permanente
            </summary>
            <remarks>Ejecuta el algoritmo de planeación y regresa el resultado de la ejecución</remarks>
            <param name="startDate">La primera fecha a considerar</param>
            <param name="endDate">La última fecha a considerar</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TravelPlansApiController.GetTravelPlans(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Obtiene los planes de viaje del periodo especificado
            </summary>
            <remarks>Ejecuta el algoritmo de planeación y regresa el resultado correspondiente</remarks>
            <param name="startDate">La primera fecha a considerar</param>
            <param name="endDate">La última fecha a considerar</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TravelPlansApiController.DownloadTravelPlans(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Descarga los planes de viaje del periodo especificado
            </summary>
            <remarks>Ejecuta el algoritmo de planeación y regresa el resultado correspondiente</remarks>
            <param name="fileName">Nombre del archivo a descargar</param>
            <param name="startDate">La primera fecha a considerar</param>
            <param name="endDate">La última fecha a considerar</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Controllers.TrucksStatusHistoryApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.TrucksStatusHistoryApiController.GetPositioned(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Obtiene el historial de los tractores posicionados por fecha, oficina y tipo de mercado
            </summary>
            <param name="date">Es la fecha de busqueda</param>
            <param name="officeId">El id de la oficina donde se estuvo posicionado</param>
            <param name="marketTypeId">El id del tipo mercado donde se estuvo posicionado</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TrucksStatusHistoryApiController.Getloaded(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Obtiene el historial de los tractores cargados por fecha, oficina y tipo de mercado
            </summary>
            <param name="date">Es la fecha de busqueda</param>
            <param name="officeId">El id de la oficina donde se estuvo posicionado</param>
            <param name="marketTypeId">El id del tipo mercado donde se estuvo posicionado</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:IO.Swagger.Controllers.TrucksStatusHistoryApiController.UpdatePositionedTruckHistory">
            <summary>
            Actualiza TruckStatusHistory al dia de hoy
            </summary>
            <response code="204">El recurso sido cargado.</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:IO.Swagger.Models.Advance">
            <summary>
            anticipos del operador por viaje
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Advance.IdTravel">
            <summary>
            Gets or Sets IdTravel
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Advance.IdOperator">
            <summary>
            Gets or Sets IdOperator
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Advance.IdTruck">
            <summary>
            Gets or Sets IdTruck
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Advance.Concept">
            <summary>
            Gets or Sets Concept
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Advance.Details">
            <summary>
            Gets or Sets Details
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Advance.Amount">
            <summary>
            Gets or Sets Amount
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Advance.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Advance.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Advance.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Advance.Equals(IO.Swagger.Models.Advance)">
            <summary>
            Returns true if Advance instances are equal
            </summary>
            <param name="other">Instance of Advance to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Advance.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.BaseEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.BaseEntity.Id">
            <summary>
            El id de esta entidad
            </summary>
            <value>El id de esta entidad</value>
        </member>
        <member name="P:IO.Swagger.Models.BaseEntity.Active">
            <summary>
            La entidad se encuentra activa
            </summary>
            <value>La entidad se encuentra activa</value>
        </member>
        <member name="P:IO.Swagger.Models.BaseEntity.CreatedBy">
            <summary>
            El id del usuario que creo esta entidad
            </summary>
            <value>El id del usuario que creo esta entidad</value>
        </member>
        <member name="P:IO.Swagger.Models.BaseEntity.CreatedAt">
            <summary>
            La fecha de creación de la entidad
            </summary>
            <value>La fecha de creación de la entidad</value>
        </member>
        <member name="P:IO.Swagger.Models.BaseEntity.UpdatedBy">
            <summary>
            El id del último usuario que actualizo esta entidad
            </summary>
            <value>El id del último usuario que actualizo esta entidad</value>
        </member>
        <member name="P:IO.Swagger.Models.BaseEntity.UpdatedAt">
            <summary>
            La fecha de la última actualización de la entidad
            </summary>
            <value>La fecha de la última actualización de la entidad</value>
        </member>
        <member name="M:IO.Swagger.Models.BaseEntity.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseEntity.Equals(IO.Swagger.Models.BaseEntity)">
            <summary>
            Returns true if BaseEntity instances are equal
            </summary>
            <param name="other">Instance of BaseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.BaseIdAndName">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.BaseIdAndName.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.BaseIdAndName.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.BaseIdAndName.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseIdAndName.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseIdAndName.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseIdAndName.Equals(IO.Swagger.Models.BaseIdAndName)">
            <summary>
            Returns true if BaseIdAndName instances are equal
            </summary>
            <param name="other">Instance of BaseIdAndName to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.BaseIdAndName.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Bonus">
            <summary>
            Bono
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.TravelId">
            <summary>
            Gets or Sets TravelId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.PayingId">
            <summary>
            Gets or Sets PayingId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.OperatorId">
            <summary>
            Gets or Sets OperatorId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.OperatorName">
            <summary>
            Gets or Sets OperatorName
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.OperatorType">
            <summary>
            Gets or Sets OperatorType
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.OperationBonus">
            <summary>
            Gets or Sets OperationBonus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.QualityBonus">
            <summary>
            Gets or Sets QualityBonus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.PeopleBonus">
            <summary>
            Gets or Sets PeopleBonus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.FinancesBonus">
            <summary>
            Gets or Sets FinancesBonus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.CustomerBonus">
            <summary>
            Gets or Sets CustomerBonus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Bonus.InfraestructureBonus">
            <summary>
            Gets or Sets InfraestructureBonus
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Bonus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Bonus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Bonus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Bonus.Equals(IO.Swagger.Models.Bonus)">
            <summary>
            Returns true if Bonus instances are equal
            </summary>
            <param name="other">Instance of Bonus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Bonus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Clarification">
            <summary>
            Aclaración
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.ExpenseId">
            <summary>
            Gets or Sets ExpenseId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.PayingId">
            <summary>
            Gets or Sets PayingId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.TravelId">
            <summary>
            Gets or Sets TravelId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.OperatorId">
            <summary>
            Gets or Sets OperatorId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.Date">
            <summary>
            Gets or Sets Date
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.Concept">
            <summary>
            Gets or Sets Concept
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.Amount">
            <summary>
            Gets or Sets Amount
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.Comment">
            <summary>
            Gets or Sets Comment
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.Expenses">
            <summary>
            Gets or Sets Expenses
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.Evidences">
            <summary>
            Gets or Sets Evidences
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.RequestedAmount">
            <summary>
            Gets or Sets RequestedAmount
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.DepositedAmount">
            <summary>
            Gets or Sets DepositedAmount
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Clarification.ClarificationStatusId">
            <summary>
            Gets or Sets ClarificationStatusId
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Clarification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Clarification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Clarification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Clarification.Equals(IO.Swagger.Models.Clarification)">
            <summary>
            Returns true if Clarification instances are equal
            </summary>
            <param name="other">Instance of Clarification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Clarification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.ClarificationStatus">
            <summary>
            Estatus de aclaración
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.ClarificationStatus.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.ClarificationStatus.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.ClarificationStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ClarificationStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ClarificationStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ClarificationStatus.Equals(IO.Swagger.Models.ClarificationStatus)">
            <summary>
            Returns true if ClarificationStatus instances are equal
            </summary>
            <param name="other">Instance of ClarificationStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ClarificationStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.CreatedId">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.CreatedId.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.CreatedId.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedId.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedId.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedId.Equals(IO.Swagger.Models.CreatedId)">
            <summary>
            Returns true if CreatedId instances are equal
            </summary>
            <param name="other">Instance of CreatedId to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedId.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.CreatedUid">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.CreatedUid.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.CreatedUid.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedUid.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedUid.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedUid.Equals(IO.Swagger.Models.CreatedUid)">
            <summary>
            Returns true if CreatedUid instances are equal
            </summary>
            <param name="other">Instance of CreatedUid to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CreatedUid.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.CustomerDemand">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.CustomerDemand.Customer">
            <summary>
            Cliente
            </summary>
            <value>Cliente</value>
        </member>
        <member name="P:IO.Swagger.Models.CustomerDemand.CustomerPriority">
            <summary>
            Prioridad del cliente
            </summary>
            <value>Prioridad del cliente</value>
        </member>
        <member name="P:IO.Swagger.Models.CustomerDemand.MarketType">
            <summary>
            Tipo de Mercado
            </summary>
            <value>Tipo de Mercado</value>
        </member>
        <member name="P:IO.Swagger.Models.CustomerDemand.Demand">
            <summary>
            Demanda
            </summary>
            <value>Demanda</value>
        </member>
        <member name="M:IO.Swagger.Models.CustomerDemand.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CustomerDemand.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CustomerDemand.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CustomerDemand.Equals(IO.Swagger.Models.CustomerDemand)">
            <summary>
            Returns true if CustomerDemand instances are equal
            </summary>
            <param name="other">Instance of CustomerDemand to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CustomerDemand.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Department">
            <summary>
            Tipo de ticket
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Department.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Department.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Department.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Department.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Department.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Department.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Department.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Department.Equals(IO.Swagger.Models.Department)">
            <summary>
            Returns true if Department instances are equal
            </summary>
            <param name="other">Instance of Department to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Department.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Destination">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Destination.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Destination.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Destination.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Destination.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Destination.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Destination.Equals(IO.Swagger.Models.Destination)">
            <summary>
            Returns true if Destination instances are equal
            </summary>
            <param name="other">Instance of Destination to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Destination.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.EvidenceNonBudgetedExpense">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.EvidenceNonBudgetedExpense.IdNonBudgetedExpense">
            <summary>
            Gets or Sets IdNonBudgetedExpense
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.EvidenceNonBudgetedExpense.Guid">
            <summary>
            Gets or Sets Guid
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.EvidenceNonBudgetedExpense.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.EvidenceNonBudgetedExpense.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.EvidenceNonBudgetedExpense.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.EvidenceNonBudgetedExpense.Equals(IO.Swagger.Models.EvidenceNonBudgetedExpense)">
            <summary>
            Returns true if EvidenceNonBudgetedExpense instances are equal
            </summary>
            <param name="other">Instance of EvidenceNonBudgetedExpense to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.EvidenceNonBudgetedExpense.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Expense">
            <summary>
            son los gastos no de ducibles
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Expense.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Expense.Amount">
            <summary>
            Gets or Sets Amount
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Expense.Concept">
            <summary>
            Gets or Sets Concept
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Expense.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Expense.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Expense.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Expense.Equals(IO.Swagger.Models.Expense)">
            <summary>
            Returns true if Expense instances are equal
            </summary>
            <param name="other">Instance of Expense to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Expense.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.ExpenseType">
            <summary>
            Tipo de gasto
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.ExpenseType.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.ExpenseType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.ExpenseType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ExpenseType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ExpenseType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ExpenseType.Equals(IO.Swagger.Models.ExpenseType)">
            <summary>
            Returns true if ExpenseType instances are equal
            </summary>
            <param name="other">Instance of ExpenseType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ExpenseType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.FileUpload">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.FileUpload.File">
            <summary>
            Gets or Sets File
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.FileUpload.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.FileUpload.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.FileUpload.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.FileUpload.Equals(IO.Swagger.Models.FileUpload)">
            <summary>
            Returns true if FileUpload instances are equal
            </summary>
            <param name="other">Instance of FileUpload to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.FileUpload.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.FleetMetrics">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.FleetMetrics.Total">
            <summary>
            Total
            </summary>
            <value>Total</value>
        </member>
        <member name="P:IO.Swagger.Models.FleetMetrics.Transit">
            <summary>
            En tránsito
            </summary>
            <value>En tránsito</value>
        </member>
        <member name="P:IO.Swagger.Models.FleetMetrics.Loading">
            <summary>
            Cargando
            </summary>
            <value>Cargando</value>
        </member>
        <member name="P:IO.Swagger.Models.FleetMetrics.Available">
            <summary>
            Disponible en base sin asignacion
            </summary>
            <value>Disponible en base sin asignacion</value>
        </member>
        <member name="P:IO.Swagger.Models.FleetMetrics.NotAvailable">
            <summary>
            No disponbiles por taller
            </summary>
            <value>No disponbiles por taller</value>
        </member>
        <member name="P:IO.Swagger.Models.FleetMetrics.Maintenance">
            <summary>
            En mantenimiento
            </summary>
            <value>En mantenimiento</value>
        </member>
        <member name="P:IO.Swagger.Models.FleetMetrics.Accident">
            <summary>
            Accidentado
            </summary>
            <value>Accidentado</value>
        </member>
        <member name="M:IO.Swagger.Models.FleetMetrics.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.FleetMetrics.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.FleetMetrics.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.FleetMetrics.Equals(IO.Swagger.Models.FleetMetrics)">
            <summary>
            Returns true if FleetMetrics instances are equal
            </summary>
            <param name="other">Instance of FleetMetrics to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.FleetMetrics.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Forecast">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Forecast.Customer">
            <summary>
            El id de este cliente
            </summary>
            <value>El id de este cliente</value>
        </member>
        <member name="P:IO.Swagger.Models.Forecast.Origin">
            <summary>
            El id de la localización del origen
            </summary>
            <value>El id de la localización del origen</value>
        </member>
        <member name="P:IO.Swagger.Models.Forecast.MarketType">
            <summary>
            El id del tipo de mercado
            </summary>
            <value>El id del tipo de mercado</value>
        </member>
        <member name="P:IO.Swagger.Models.Forecast.TruckType">
            <summary>
            Cantidad de Vins en el Plan
            </summary>
            <value>Cantidad de Vins en el Plan</value>
        </member>
        <member name="P:IO.Swagger.Models.Forecast.Date">
            <summary>
            Fecha programada
            </summary>
            <value>Fecha programada</value>
        </member>
        <member name="P:IO.Swagger.Models.Forecast.TrucksQuantity">
            <summary>
            Cantidad de tractores solicitados
            </summary>
            <value>Cantidad de tractores solicitados</value>
        </member>
        <member name="P:IO.Swagger.Models.Forecast.TrucksQuantityEdited">
            <summary>
            Valor editado de la cantidad de tractores solicitados
            </summary>
            <value>Valor editado de la cantidad de tractores solicitados</value>
        </member>
        <member name="M:IO.Swagger.Models.Forecast.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Forecast.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Forecast.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Forecast.Equals(IO.Swagger.Models.Forecast)">
            <summary>
            Returns true if Forecast instances are equal
            </summary>
            <param name="other">Instance of Forecast to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Forecast.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.HistoryReason">
            <summary>
            obtiene y regresa el valor del campo reason
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HistoryReason.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HistoryReason.IdTrafficPlan">
            <summary>
            Gets or Sets IdTrafficPlan
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HistoryReason.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HistoryReason.IdActiveDirectory">
            <summary>
            Gets or Sets IdActiveDirectory
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HistoryReason.Active">
            <summary>
            Gets or Sets Active
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HistoryReason.CreatedBy">
            <summary>
            Gets or Sets CreatedBy
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HistoryReason.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.HistoryReason.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.HistoryReason.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.HistoryReason.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.HistoryReason.Equals(IO.Swagger.Models.HistoryReason)">
            <summary>
            Returns true if HistoryReason instances are equal
            </summary>
            <param name="other">Instance of HistoryReason to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.HistoryReason.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Hotel">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Routes">
            <summary>
            Gets or Sets Routes
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Latitude">
            <summary>
            Gets or Sets Latitude
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Longitude">
            <summary>
            Gets or Sets Longitude
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Hotel.Website">
            <summary>
            Gets or Sets Website
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Hotel.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Hotel.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Hotel.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Hotel.Equals(IO.Swagger.Models.Hotel)">
            <summary>
            Returns true if Hotel instances are equal
            </summary>
            <param name="other">Instance of Hotel to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Hotel.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.HotelData">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.HotelData.Hotels">
            <summary>
            Gets or Sets Hotel
            </summary>
            <value>Gets or Sets Hotel</value>
        </member>
        <member name="M:IO.Swagger.Models.HotelData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.HotelData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.HotelData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.HotelData.Equals(IO.Swagger.Models.HotelData)">
            <summary>
            Returns true if HotelData instances are equal
            </summary>
            <param name="other">Instance of HotelData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.HotelData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.InternalTransfer">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.InternalTransfer.ApprovalStatus">
            <summary>
            Estado de aprobación
            </summary>
            <value>Estado de aprobación</value>
        </member>
        <member name="P:IO.Swagger.Models.InternalTransfer.Comment">
            <summary>
            Comentario
            </summary>
            <value>Comentario</value>
        </member>
        <member name="P:IO.Swagger.Models.InternalTransfer.Trucks">
            <summary>
            Gets or Sets Trucks
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransfer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransfer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransfer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransfer.Equals(IO.Swagger.Models.InternalTransfer)">
            <summary>
            Returns true if InternalTransfer instances are equal
            </summary>
            <param name="other">Instance of InternalTransfer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransfer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.InternalTransferTruck">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.InternalTransferTruck.Truck">
            <summary>
            El id del tráctor
            </summary>
            <value>El id del tráctor</value>
        </member>
        <member name="P:IO.Swagger.Models.InternalTransferTruck.Origin">
            <summary>
            Origen
            </summary>
            <value>Origen</value>
        </member>
        <member name="P:IO.Swagger.Models.InternalTransferTruck.Destination">
            <summary>
            Destino
            </summary>
            <value>Destino</value>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransferTruck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransferTruck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransferTruck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransferTruck.Equals(IO.Swagger.Models.InternalTransferTruck)">
            <summary>
            Returns true if InternalTransferTruck instances are equal
            </summary>
            <param name="other">Instance of InternalTransferTruck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.InternalTransferTruck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.LoadPlan">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.LoadPlan.MarketType">
            <summary>
            El id del tipo de mercado
            </summary>
            <value>El id del tipo de mercado</value>
        </member>
        <member name="P:IO.Swagger.Models.LoadPlan.Customer">
            <summary>
            El id de este cliente
            </summary>
            <value>El id de este cliente</value>
        </member>
        <member name="P:IO.Swagger.Models.LoadPlan.Office">
            <summary>
            El id de la oficina
            </summary>
            <value>El id de la oficina</value>
        </member>
        <member name="P:IO.Swagger.Models.LoadPlan.Date">
            <summary>
            Fecha programada
            </summary>
            <value>Fecha programada</value>
        </member>
        <member name="P:IO.Swagger.Models.LoadPlan.Vins">
            <summary>
            Gets or Sets Vins
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.LoadPlan.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.LoadPlan.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.LoadPlan.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.LoadPlan.Equals(IO.Swagger.Models.LoadPlan)">
            <summary>
            Returns true if LoadPlan instances are equal
            </summary>
            <param name="other">Instance of LoadPlan to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.LoadPlan.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Location">
            <summary>
            Representa un origen, un destino o un regreso
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Location.City">
            <summary>
            El id de la ciudad en la que se encuentra esta ubicación
            </summary>
            <value>El id de la ciudad en la que se encuentra esta ubicación</value>
        </member>
        <member name="P:IO.Swagger.Models.Location.Coordinates">
            <summary>
            Gets or Sets Coordinates
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Location.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Location.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Location.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Location.Equals(IO.Swagger.Models.Location)">
            <summary>
            Returns true if Location instances are equal
            </summary>
            <param name="other">Instance of Location to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Location.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.LocationType">
            <summary>
            Gets or Sets LocationType
            </summary>
        </member>
        <member name="F:IO.Swagger.Models.LocationType.Origin">
            <summary>
            Enum OriginEnum for origin
            </summary>
        </member>
        <member name="F:IO.Swagger.Models.LocationType.Destination">
            <summary>
            Enum DestinationEnum for destination
            </summary>
        </member>
        <member name="F:IO.Swagger.Models.LocationType.Office">
            <summary>
            Enum OfficeEnum for office
            </summary>
        </member>
        <member name="T:IO.Swagger.Models.NamedEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NamedEntity.Name">
            <summary>
            El nombre de esta entidad
            </summary>
            <value>El nombre de esta entidad</value>
        </member>
        <member name="P:IO.Swagger.Models.NamedEntity.Description">
            <summary>
            El nombre de esta entidad
            </summary>
            <value>El nombre de esta entidad</value>
        </member>
        <member name="P:IO.Swagger.Models.NamedEntity.Alias">
            <summary>
            El alias de esta entidad, se obtine del cliente
            </summary>
            <value>El alias de esta entidad, se obtine del cliente</value>
        </member>
        <member name="M:IO.Swagger.Models.NamedEntity.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NamedEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NamedEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NamedEntity.Equals(IO.Swagger.Models.NamedEntity)">
            <summary>
            Returns true if NamedEntity instances are equal
            </summary>
            <param name="other">Instance of NamedEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NamedEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.NonBudgetedExpense">
            <summary>
            Gasto no presupuestado
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.IsBillable">
            <summary>
            Gets or Sets IsBillable
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.Date">
            <summary>
            Gets or Sets Date
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.Comments">
            <summary>
            Gets or Sets Comments
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.Amount">
            <summary>
            Gets or Sets Amount
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.TripId">
            <summary>
            Gets or Sets TripId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.Trip">
            <summary>
            Gets or Sets Trip
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.OperatorId">
            <summary>
            Gets or Sets OperatorId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.Operator">
            <summary>
            Gets or Sets Operator
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.NonBudgetedExpenseStatusId">
            <summary>
            Gets or Sets NonBudgetedExpenseStatusId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.NonBudgetedExpenseStatus">
            <summary>
            Gets or Sets NonBudgetedExpenseStatus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.NonBudgetedExpenseTypeId">
            <summary>
            Gets or Sets NonBudgetedExpenseTypeId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.NonBudgetedExpenseType">
            <summary>
            Gets or Sets NonBudgetedExpenseType
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpense.EvidenceNonBudgetedExpense">
            <summary>
            Gets or Sets EvidenceNonBudgetedExpense
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpense.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpense.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpense.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpense.Equals(IO.Swagger.Models.NonBudgetedExpense)">
            <summary>
            Returns true if NonBudgetedExpense instances are equal
            </summary>
            <param name="other">Instance of NonBudgetedExpense to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpense.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.NonBudgetedExpenseStatus">
            <summary>
            Estatus de gasto no presupuestado
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpenseStatus.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpenseStatus.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseStatus.Equals(IO.Swagger.Models.NonBudgetedExpenseStatus)">
            <summary>
            Returns true if NonBudgetedExpenseStatus instances are equal
            </summary>
            <param name="other">Instance of NonBudgetedExpenseStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.NonBudgetedExpenseType">
            <summary>
            Tipo de gasto no presupuestado
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpenseType.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NonBudgetedExpenseType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseType.Equals(IO.Swagger.Models.NonBudgetedExpenseType)">
            <summary>
            Returns true if NonBudgetedExpenseType instances are equal
            </summary>
            <param name="other">Instance of NonBudgetedExpenseType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NonBudgetedExpenseType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Notification">
            <summary>
            Son las notificaciones que se enviaran
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Notification.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Notification.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Notification.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Notification.Date">
            <summary>
            Gets or Sets Date
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Notification.NotificationStatus">
            <summary>
            Gets or Sets NotificationStatus
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Notification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Notification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Notification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Notification.Equals(IO.Swagger.Models.Notification)">
            <summary>
            Returns true if Notification instances are equal
            </summary>
            <param name="other">Instance of Notification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Notification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.NotificationStatus">
            <summary>
            Estatus de ticket
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NotificationStatus.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.NotificationStatus.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.NotificationStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NotificationStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.NotificationStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NotificationStatus.Equals(IO.Swagger.Models.NotificationStatus)">
            <summary>
            Returns true if NotificationStatus instances are equal
            </summary>
            <param name="other">Instance of NotificationStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.NotificationStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.OfficePlan">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OfficePlan.Office">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OfficePlan.TrucksPlan">
            <summary>
            Gets or Sets TrucksPlan
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.OfficePlan.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.OfficePlan.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.OfficePlan.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.OfficePlan.Equals(IO.Swagger.Models.OfficePlan)">
            <summary>
            Returns true if OfficePlan instances are equal
            </summary>
            <param name="other">Instance of OfficePlan to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.OfficePlan.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Operator">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Operator.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Operator.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Operator.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Operator.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Operator.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Operator.Equals(IO.Swagger.Models.Operator)">
            <summary>
            Returns true if Operator instances are equal
            </summary>
            <param name="other">Instance of Operator to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Operator.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.OperatorNotAvailable">
            <summary>
            Son los datos del operador
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OperatorNotAvailable.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OperatorNotAvailable.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OperatorNotAvailable.Truck">
            <summary>
            Gets or Sets Truck
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OperatorNotAvailable.LastDateTravel">
            <summary>
            Gets or Sets LastDateTravel
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OperatorNotAvailable.DaysNotAvailable">
            <summary>
            Gets or Sets DaysNotAvailable
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailable.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailable.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailable.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailable.Equals(IO.Swagger.Models.OperatorNotAvailable)">
            <summary>
            Returns true if OperatorNotAvailable instances are equal
            </summary>
            <param name="other">Instance of OperatorNotAvailable to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailable.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.OperatorNotAvailableTruck">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.OperatorNotAvailableTruck.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailableTruck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailableTruck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailableTruck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailableTruck.Equals(IO.Swagger.Models.OperatorNotAvailableTruck)">
            <summary>
            Returns true if OperatorNotAvailableTruck instances are equal
            </summary>
            <param name="other">Instance of OperatorNotAvailableTruck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.OperatorNotAvailableTruck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Origin">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Origin.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Origin.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Origin.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Origin.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Origin.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Origin.Equals(IO.Swagger.Models.Origin)">
            <summary>
            Returns true if Origin instances are equal
            </summary>
            <param name="other">Instance of Origin to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Origin.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Payment">
            <summary>
            Liquidación
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.TravelId">
            <summary>
            Gets or Sets TravelId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.OperatorId">
            <summary>
            Gets or Sets OperatorId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.OperatorName">
            <summary>
            Gets or Sets OperatorName
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.OperatorType">
            <summary>
            Gets or Sets OperatorType
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.StartDate">
            <summary>
            Gets or Sets StartDate
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.EndDate">
            <summary>
            Gets or Sets EndDate
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.TruckId">
            <summary>
            Gets or Sets TruckId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.Bonus">
            <summary>
            Gets or Sets Bonus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.Advances">
            <summary>
            Gets or Sets Advances
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.Expenses">
            <summary>
            Gets or Sets Expenses
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.Salarys">
            <summary>
            Gets or Sets Salarys
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.PaymentStatus">
            <summary>
            Gets or Sets PaymentStatus
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Payment.ClearanceId">
            <summary>
            Gets or Sets ClearanceId
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Payment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Payment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Payment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Payment.Equals(IO.Swagger.Models.Payment)">
            <summary>
            Returns true if Payment instances are equal
            </summary>
            <param name="other">Instance of Payment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Payment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.PaymentStatus">
            <summary>
            Estatus de liquidación
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.PaymentStatus.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.PaymentStatus.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.PaymentStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.PaymentStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.PaymentStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.PaymentStatus.Equals(IO.Swagger.Models.PaymentStatus)">
            <summary>
            Returns true if PaymentStatus instances are equal
            </summary>
            <param name="other">Instance of PaymentStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.PaymentStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Position">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Position.Timestamp">
            <summary>
            Timestamp de esta posición
            </summary>
            <value>Timestamp de esta posición</value>
        </member>
        <member name="P:IO.Swagger.Models.Position.Coordinates">
            <summary>
            Gets or Sets Coordinates
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Position.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Position.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Position.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Position.Equals(IO.Swagger.Models.Position)">
            <summary>
            Returns true if Position instances are equal
            </summary>
            <param name="other">Instance of Position to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Position.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Reply">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Reply.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Reply.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Reply.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Reply.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Reply.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Reply.Equals(IO.Swagger.Models.Reply)">
            <summary>
            Returns true if Reply instances are equal
            </summary>
            <param name="other">Instance of Reply to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Reply.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.ReturnTo">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.ReturnTo.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.ReturnTo.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.ReturnTo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ReturnTo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ReturnTo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ReturnTo.Equals(IO.Swagger.Models.ReturnTo)">
            <summary>
            Returns true if ReturnTo instances are equal
            </summary>
            <param name="other">Instance of ReturnTo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ReturnTo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.REvidenceNonBudgetedExpense">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.REvidenceNonBudgetedExpense.Reply">
            <summary>
            Gets or Sets Reply
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.REvidenceNonBudgetedExpense.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpense.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpense.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpense.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpense.Equals(IO.Swagger.Models.REvidenceNonBudgetedExpense)">
            <summary>
            Returns true if REvidenceNonBudgetedExpense instances are equal
            </summary>
            <param name="other">Instance of REvidenceNonBudgetedExpense to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpense.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.REvidenceNonBudgetedExpenseData">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.REvidenceNonBudgetedExpenseData.EvidenceNonBudgetedExpense">
            <summary>
            Gets or Sets NonBudgetedExpense
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpenseData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpenseData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpenseData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpenseData.Equals(IO.Swagger.Models.REvidenceNonBudgetedExpenseData)">
            <summary>
            Returns true if REvidenceNonBudgetedExpenseData instances are equal
            </summary>
            <param name="other">Instance of REvidenceNonBudgetedExpenseData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.REvidenceNonBudgetedExpenseData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.RHotel">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RHotel.Reply">
            <summary>
            Gets or Sets Reply
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RHotel.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.RHotel.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RHotel.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RHotel.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RHotel.Equals(IO.Swagger.Models.RHotel)">
            <summary>
            Returns true if RHotel instances are equal
            </summary>
            <param name="other">Instance of RHotel to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RHotel.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.RNonBudgetedExpense">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RNonBudgetedExpense.Reply">
            <summary>
            Gets or Sets Reply
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RNonBudgetedExpense.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpense.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpense.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpense.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpense.Equals(IO.Swagger.Models.RNonBudgetedExpense)">
            <summary>
            Returns true if RNonBudgetedExpense instances are equal
            </summary>
            <param name="other">Instance of RNonBudgetedExpense to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpense.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.RNonBudgetedExpenseData">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RNonBudgetedExpenseData.NonBudgetedExpense">
            <summary>
            Gets or Sets NonBudgetedExpense
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseData.Equals(IO.Swagger.Models.RNonBudgetedExpenseData)">
            <summary>
            Returns true if RNonBudgetedExpenseData instances are equal
            </summary>
            <param name="other">Instance of RNonBudgetedExpenseData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.RNonBudgetedExpenseType">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RNonBudgetedExpenseType.Reply">
            <summary>
            Gets or Sets Reply
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RNonBudgetedExpenseType.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseType.Equals(IO.Swagger.Models.RNonBudgetedExpenseType)">
            <summary>
            Returns true if RNonBudgetedExpenseType instances are equal
            </summary>
            <param name="other">Instance of RNonBudgetedExpenseType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.RNonBudgetedExpenseTypeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RNonBudgetedExpenseTypeData.NonBudgetedExpenseType">
            <summary>
            Gets or Sets NonBudgetedExpense
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseTypeData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseTypeData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseTypeData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseTypeData.Equals(IO.Swagger.Models.RNonBudgetedExpenseTypeData)">
            <summary>
            Returns true if RNonBudgetedExpenseTypeData instances are equal
            </summary>
            <param name="other">Instance of RNonBudgetedExpenseTypeData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RNonBudgetedExpenseTypeData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.RouteHotel">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.RouteHotel.IdRoute">
            <summary>
            Gets or Sets IdRoute
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.RouteHotel.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RouteHotel.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.RouteHotel.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RouteHotel.Equals(IO.Swagger.Models.RouteHotel)">
            <summary>
            Returns true if RouteHotel instances are equal
            </summary>
            <param name="other">Instance of RouteHotel to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.RouteHotel.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Salary">
            <summary>
            El salario del operador
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Salary.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Salary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Salary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Salary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Salary.Equals(IO.Swagger.Models.Salary)">
            <summary>
            Returns true if Salary instances are equal
            </summary>
            <param name="other">Instance of Salary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Salary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Ticket">
            <summary>
            Ticket
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.TravelId">
            <summary>
            Gets or Sets TravelId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.OperatorId">
            <summary>
            Gets or Sets OperatorId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.DepartmentId">
            <summary>
            Gets or Sets DepartmentId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.OperatorName">
            <summary>
            Gets or Sets OperatorName
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.Date">
            <summary>
            Gets or Sets Date
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.Comment">
            <summary>
            Gets or Sets Comment
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.ExpenseTypeId">
            <summary>
            Gets or Sets ExpenseTypeId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Ticket.Evidences">
            <summary>
            Gets or Sets Evidences
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Ticket.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Ticket.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Ticket.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Ticket.Equals(IO.Swagger.Models.Ticket)">
            <summary>
            Returns true if Ticket instances are equal
            </summary>
            <param name="other">Instance of Ticket to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Ticket.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TicketStatus">
            <summary>
            Estatus de ticket
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TicketStatus.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TicketStatus.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TicketStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketStatus.Equals(IO.Swagger.Models.TicketStatus)">
            <summary>
            Returns true if TicketStatus instances are equal
            </summary>
            <param name="other">Instance of TicketStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TicketType">
            <summary>
            Tipo de ticket
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TicketType.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TicketType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TicketType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketType.Equals(IO.Swagger.Models.TicketType)">
            <summary>
            Returns true if TicketType instances are equal
            </summary>
            <param name="other">Instance of TicketType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TicketType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TrackingNotAvailable">
            <summary>
            Contiene las listas dos listas Operadores, tracores y demanda
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailable.Operators">
            <summary>
            Gets or Sets Operators
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailable.Trucks">
            <summary>
            Gets or Sets Trucks
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailable.Plan">
            <summary>
            Gets or Sets Plan
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailable.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailable.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailable.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailable.Equals(IO.Swagger.Models.TrackingNotAvailable)">
            <summary>
            Returns true if TrackingNotAvailable instances are equal
            </summary>
            <param name="other">Instance of TrackingNotAvailable to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailable.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TrackingNotAvailableDetail">
            <summary>
            tiene los totales del seguimiento
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetail.ToCharge">
            <summary>
            Gets or Sets ToCharge
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetail.Transit">
            <summary>
            Gets or Sets Transit
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetail.Download">
            <summary>
            Gets or Sets Download
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetail.ZeroDays">
            <summary>
            Gets or Sets ZeroDays
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetail.OneDays">
            <summary>
            Gets or Sets OneDays
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetail.TwoDays">
            <summary>
            Gets or Sets TwoDays
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetail.ThreeDaysOrmore">
            <summary>
            Gets or Sets ThreeDaysOrmore
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetail.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetail.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetail.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetail.Equals(IO.Swagger.Models.TrackingNotAvailableDetail)">
            <summary>
            Returns true if TrackingNotAvailableDetail instances are equal
            </summary>
            <param name="other">Instance of TrackingNotAvailableDetail to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetail.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TrackingNotAvailableDetails">
            <summary>
            Tiene la lista de los totales del seguimiento
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetails.TypeMarket">
            <summary>
            Gets or Sets TypeMarket
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetails.Office">
            <summary>
            Gets or Sets Office
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetails.Customer">
            <summary>
            Gets or Sets Customer
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetails.Operators">
            <summary>
            Gets or Sets Operators
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetails.Truks">
            <summary>
            Gets or Sets Truks
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrackingNotAvailableDetails.Plan">
            <summary>
            Gets or Sets Plan
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetails.Equals(IO.Swagger.Models.TrackingNotAvailableDetails)">
            <summary>
            Returns true if TrackingNotAvailableDetails instances are equal
            </summary>
            <param name="other">Instance of TrackingNotAvailableDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrackingNotAvailableDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TrafficPlan">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.MarketType">
            <summary>
            Gets or Sets MarketType
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.Customer">
            <summary>
            Gets or Sets Customer
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.Origin">
            <summary>
            Gets or Sets Origin
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.Destination">
            <summary>
            Gets or Sets Destination
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.ReturnTo">
            <summary>
            Gets or Sets ReturnTo
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.StartDate">
            <summary>
            Fecha de inicio
            </summary>
            <value>Fecha de inicio</value>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.EndDate">
            <summary>
            Fecha de regreso
            </summary>
            <value>Fecha de regreso</value>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.Truck">
            <summary>
            Gets or Sets Truck
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.TruckOperator">
            <summary>
            Gets or Sets TruckOperator
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrafficPlan.Reason">
            <summary>
            Razón del movimiento
            </summary>
            <value>Razón del movimiento</value>
        </member>
        <member name="M:IO.Swagger.Models.TrafficPlan.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrafficPlan.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrafficPlan.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrafficPlan.Equals(IO.Swagger.Models.TrafficPlan)">
            <summary>
            Returns true if TrafficPlan instances are equal
            </summary>
            <param name="other">Instance of TrafficPlan to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrafficPlan.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Travel">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Travel.Destination">
            <summary>
            Gets or Sets Destination
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Travel.TravelCost">
            <summary>
            Gets or Sets TravelCost
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Travel.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Travel.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Travel.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Travel.Equals(IO.Swagger.Models.Travel)">
            <summary>
            Returns true if Travel instances are equal
            </summary>
            <param name="other">Instance of Travel to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Travel.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TravelCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TravelCost.Arrival">
            <summary>
            Tiempo de llegada
            </summary>
            <value>Tiempo de llegada</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCost.Distance">
            <summary>
            Distancia
            </summary>
            <value>Distancia</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCost.Cost">
            <summary>
            Costo
            </summary>
            <value>Costo</value>
        </member>
        <member name="M:IO.Swagger.Models.TravelCost.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCost.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCost.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCost.Equals(IO.Swagger.Models.TravelCost)">
            <summary>
            Returns true if TravelCost instances are equal
            </summary>
            <param name="other">Instance of TravelCost to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCost.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TravelCurrent">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrent.Code">
            <summary>
            Status code
            </summary>
            <value>Status code</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrent.Message">
            <summary>
            Gets or Sets Message
            </summary>
            <value>Gets or Sets Message</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrent.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrent.Equals(IO.Swagger.Models.TravelCurrent)">
            <summary>
            Returns true if TravelCurrent instances are equal
            </summary>
            <param name="other">Instance of TravelCurrent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TravelCurrentData">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.IdTrip">
            <summary>
            El id del viaje
            </summary>
            <value>El id del viaje</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.Estatus">
            <summary>
            Estatus del viaje
            </summary>
            <value>Estatus del viaje</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.Origen">
            <summary>
            Origen del viaje
            </summary>
            <value>Origen del viaje</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.Destino">
            <summary>
            Destino del viaje
            </summary>
            <value>Destino del viaje</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.FechaInicio">
            <summary>
            fecha del viaje
            </summary>
            <value>fecha del viaje</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.RendimientoEsperadoDiesel">
            <summary>
            Rendimiento esperado del diesel
            </summary>
            <value>Rendimiento esperado del diesel</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.RendimientoRealDiesel">
            <summary>
            Rendimiento real del diesel
            </summary>
            <value>Rendimiento real del diesel</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelCurrentData.Eta">
            <summary>
            Tiempo para llegar a su destino
            </summary>
            <value>Tiempo para llegar a su destino</value>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrentData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrentData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrentData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrentData.Equals(IO.Swagger.Models.TravelCurrentData)">
            <summary>
            Returns true if TravelCurrentData instances are equal
            </summary>
            <param name="other">Instance of TravelCurrentData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelCurrentData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TravelPlan">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TravelPlan.Date">
            <summary>
            Fecha programada
            </summary>
            <value>Fecha programada</value>
        </member>
        <member name="P:IO.Swagger.Models.TravelPlan.OfficePlans">
            <summary>
            Gets or Sets OfficePlans
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TravelPlan.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelPlan.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelPlan.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelPlan.Equals(IO.Swagger.Models.TravelPlan)">
            <summary>
            Returns true if TravelPlan instances are equal
            </summary>
            <param name="other">Instance of TravelPlan to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TravelPlan.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Trip">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.TripZamId">
            <summary>
            Gets or Sets TripZamId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.OriginId">
            <summary>
            Gets or Sets OriginId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.Origin">
            <summary>
            Gets or Sets Origin
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.DestinationId">
            <summary>
            Gets or Sets DestinationId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.Destination">
            <summary>
            Gets or Sets Destination
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.ReturnToId">
            <summary>
            Gets or Sets ReturnToId
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Trip.ReturnTo">
            <summary>
            Gets or Sets ReturnTo
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Trip.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Trip.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Trip.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Trip.Equals(IO.Swagger.Models.Trip)">
            <summary>
            Returns true if Trip instances are equal
            </summary>
            <param name="other">Instance of Trip to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Trip.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.Truck">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.Truck.TrackingId">
            <summary>
            El id de seguimiento de la unidad
            </summary>
            <value>El id de seguimiento de la unidad</value>
        </member>
        <member name="P:IO.Swagger.Models.Truck.Type">
            <summary>
            El id del tipo de unidad
            </summary>
            <value>El id del tipo de unidad</value>
        </member>
        <member name="P:IO.Swagger.Models.Truck.Status">
            <summary>
            El estatus del equipo
            </summary>
            <value>El estatus del equipo</value>
        </member>
        <member name="P:IO.Swagger.Models.Truck.Position">
            <summary>
            Gets or Sets Position
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.Truck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Truck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.Truck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Truck.Equals(IO.Swagger.Models.Truck)">
            <summary>
            Returns true if Truck instances are equal
            </summary>
            <param name="other">Instance of Truck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.Truck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TruckCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckCost.Truck">
            <summary>
            Gets or Sets Truck
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckCost.Travel">
            <summary>
            Gets or Sets Travel
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TruckCost.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckCost.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckCost.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckCost.Equals(IO.Swagger.Models.TruckCost)">
            <summary>
            Returns true if TruckCost instances are equal
            </summary>
            <param name="other">Instance of TruckCost to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckCost.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TruckNotAvailable">
            <summary>
            Son los datos del tractor
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckNotAvailable.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckNotAvailable.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckNotAvailable.TypeTractor">
            <summary>
            Gets or Sets TypeTractor
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckNotAvailable.IdOperator">
            <summary>
            Gets or Sets IdOperator
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckNotAvailable.NameOperator">
            <summary>
            Gets or Sets NameOperator
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckNotAvailable.LastDateTraveled">
            <summary>
            Gets or Sets LastDateTraveled
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckNotAvailable.DaysNotAvailable">
            <summary>
            Gets or Sets DaysNotAvailable
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TruckNotAvailable.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckNotAvailable.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckNotAvailable.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckNotAvailable.Equals(IO.Swagger.Models.TruckNotAvailable)">
            <summary>
            Returns true if TruckNotAvailable instances are equal
            </summary>
            <param name="other">Instance of TruckNotAvailable to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckNotAvailable.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TrucksPlan">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrucksPlan.Demand">
            <summary>
            Demanda
            </summary>
            <value>Demanda</value>
        </member>
        <member name="P:IO.Swagger.Models.TrucksPlan.Positioned">
            <summary>
            Posicionados
            </summary>
            <value>Posicionados</value>
        </member>
        <member name="P:IO.Swagger.Models.TrucksPlan.Arrivals">
            <summary>
            Llegadas
            </summary>
            <value>Llegadas</value>
        </member>
        <member name="P:IO.Swagger.Models.TrucksPlan.Completed">
            <summary>
            Completado
            </summary>
            <value>Completado</value>
        </member>
        <member name="M:IO.Swagger.Models.TrucksPlan.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksPlan.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksPlan.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksPlan.Equals(IO.Swagger.Models.TrucksPlan)">
            <summary>
            Returns true if TrucksPlan instances are equal
            </summary>
            <param name="other">Instance of TrucksPlan to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksPlan.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TrucksStatusHistory">
            <summary>
            Es el historial de tractores posicionados
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrucksStatusHistory.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrucksStatusHistory.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrucksStatusHistory.Bran">
            <summary>
            Gets or Sets Bran
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrucksStatusHistory.Year">
            <summary>
            Gets or Sets Year
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TrucksStatusHistory.TypeTractor">
            <summary>
            Gets or Sets TypeTractor
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TrucksStatusHistory.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksStatusHistory.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksStatusHistory.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksStatusHistory.Equals(IO.Swagger.Models.TrucksStatusHistory)">
            <summary>
            Returns true if TrucksStatusHistory instances are equal
            </summary>
            <param name="other">Instance of TrucksStatusHistory to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TrucksStatusHistory.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TruckUnit">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckUnit.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TruckUnit.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TruckUnit.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckUnit.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckUnit.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckUnit.Equals(IO.Swagger.Models.TruckUnit)">
            <summary>
            Returns true if TruckUnit instances are equal
            </summary>
            <param name="other">Instance of TruckUnit to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TruckUnit.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.TypeTruck">
            <summary>
            Es el tipo de tractor
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TypeTruck.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.TypeTruck.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.TypeTruck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TypeTruck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.TypeTruck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TypeTruck.Equals(IO.Swagger.Models.TypeTruck)">
            <summary>
            Returns true if TypeTruck instances are equal
            </summary>
            <param name="other">Instance of TypeTruck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.TypeTruck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.VinsPlan">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.VinsPlan.Planned">
            <summary>
            Cantidad de Vins en el Plan
            </summary>
            <value>Cantidad de Vins en el Plan</value>
        </member>
        <member name="P:IO.Swagger.Models.VinsPlan.Positioned">
            <summary>
            Cantidad de Vins Posicionados
            </summary>
            <value>Cantidad de Vins Posicionados</value>
        </member>
        <member name="P:IO.Swagger.Models.VinsPlan.Loaded">
            <summary>
            Cantidad de Vins Cargados
            </summary>
            <value>Cantidad de Vins Cargados</value>
        </member>
        <member name="M:IO.Swagger.Models.VinsPlan.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.VinsPlan.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.VinsPlan.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.VinsPlan.Equals(IO.Swagger.Models.VinsPlan)">
            <summary>
            Returns true if VinsPlan instances are equal
            </summary>
            <param name="other">Instance of VinsPlan to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.VinsPlan.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Filters.BasePathFilter">
            <summary>
            BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths
            </summary>
        </member>
        <member name="M:IO.Swagger.Filters.BasePathFilter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath">BasePath to remove from Operations</param>
        </member>
        <member name="P:IO.Swagger.Filters.BasePathFilter.BasePath">
            <summary>
            Gets the BasePath of the Swagger Doc
            </summary>
            <returns>The BasePath of the Swagger Doc</returns>
        </member>
        <member name="M:IO.Swagger.Filters.BasePathFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply the filter
            </summary>
            <param name="swaggerDoc">OpenApiDocument</param>
            <param name="context">FilterContext</param>
        </member>
        <member name="T:IO.Swagger.Filters.GeneratePathParamsValidationFilter">
            <summary>
            Path Parameter Validation Rules Filter
            </summary>
        </member>
        <member name="M:IO.Swagger.Filters.GeneratePathParamsValidationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation</param>
            <param name="context">OperationFilterContext</param>
        </member>
        <member name="T:IO.Swagger.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:IO.Swagger.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:IO.Swagger.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create the web host builder.
            </summary>
            <param name="args"></param>
            <returns>IWebHostBuilder</returns>
        </member>
        <member name="T:IO.Swagger.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:IO.Swagger.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="env"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:IO.Swagger.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:IO.Swagger.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.CambioRegresoViajeIniciado">
            <summary>
            Parámetro para indicar si se puede o no cambiar un regreso cuando el viaje ya inicio.
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.PorcentajeRecorridoMaximoRegreso">
            <summary>
            Parámetro para considerar el % máximo del recorrido permitido para cambiar un regreso.
            </summary>        
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.DiasMaximosModificarRegreso">
            <summary>
            Parámetro para saber cuántos días máximos se puede modificar un regreso.
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.ConsiderarTractoresEnTaller">
            <summary>
            Parámetro para considerar si se toman en cuenta o no Tractores que se encuentren en taller con una OT.
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.KmsMaximoOperarTractorMantenimiento">
            <summary>
            Parámetro para indicar cuantos KMs Máximo se permite seguir operando a un tractor cuando ya rebaso los KMs de Mantenimiento.
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.TiempoDescargaTractor">
            <summary>
            Parámetro que se usa para saber cuantas horas en descarga se pueda tomar como disponible.
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.HorasCarga">
            <summary>
            Tiempo que tarda en cargar un tractor
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.HorasDescarga">
            <summary>
            Tiempo que tarda en descargar un tractor
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.TiempoMaximoConduccionConsecutivo">
            <summary>
            Tiempo en horas máximo que una unidad puede conducir de forma seguida
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.TiempoDescanso">
            <summary>
            Tiempo de descanso del operador en horas
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.MaximoDiasBuscarCargaOficinas">
            <summary>
            Limite máximo en días que puede buscar carga en una oficina
            </summary>
        </member>
        <member name="P:Viajes.Api.Configuration.TravelPlansConfiguration.ResticcionForecastEdicion">
            <summary>
            Numero de días a futuro que el usuario no puede editar el forecast
            </summary>
        </member>
    </members>
</doc>
